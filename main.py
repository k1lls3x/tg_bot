import telebot
from telebot.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    BotCommand
)
from functional_student_code.student_menu import TelegramBot  # –í–∞—à –º–æ–¥—É–ª—å —Å –º–µ–Ω—é –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
from connect_to_sql import SqlConnection
import shutil  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤

TOKEN = "8056279378:AAGX8tILI43XHYhJrQC3JF3xUFUoyPCr9vY"

bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–º –≤—Ä–µ–º–µ–Ω–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏)
user_data = {}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –∏ –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–ª–µ–∑–Ω–æ)
conn, cursor = SqlConnection.get_connection()
if conn and cursor:
    cursor.execute("SHOW TABLES;")
    tables = cursor.fetchall()
    print("üìÇ –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:", [table[0] for table in tables])
    SqlConnection.close_connection(conn, cursor)
else:
    print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏/–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è."""
    chat_id = message.chat.id

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤ Telegram
    bot.set_my_commands([
        BotCommand("start", "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand("menu", "–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"),
        BotCommand("help", "–ü–æ–º–æ—â—å"),
        BotCommand("meow", "–°–∫–∞–∑–∞—Ç—å meow"),
        BotCommand("clear", "–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"),
    ])

    conn, cursor = SqlConnection.get_connection()
    if conn and cursor:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
            cursor.execute("""
                SELECT 'student' AS role FROM students WHERE chat_id = %s
                UNION
                SELECT 'teacher' AS role FROM teachers WHERE chat_id = %s
            """, (chat_id, chat_id))
            result = cursor.fetchone()

            if result:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –ë–î
                role = result[0]
                if role == 'student':
                    bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç! ‚úÖ\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é.")
                else:
                    bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å! ‚úÖ")
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å
                markup = InlineKeyboardMarkup()
                markup.add(
                    InlineKeyboardButton("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="teacher_button"),
                    InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—Ç", callback_data="student_button")
                )
                bot.send_message(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:", reply_markup=markup)

        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        finally:
            SqlConnection.close_connection(conn, cursor)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

def IsEmpty():
    return False
assert(IsEmpty() == False)

@bot.callback_query_handler(func=lambda call: call.data == "teacher_button")
def handle_teacher(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'."""
    chat_id = call.message.chat.id

    conn, cursor = SqlConnection.get_connection()
    if conn and cursor:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
            cursor.execute("SELECT * FROM teachers WHERE chat_id = %s", (chat_id,))
            existing_teacher = cursor.fetchone()

            if existing_teacher:
                bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å! ‚úÖ")
            else:
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–¥–∞–Ω–Ω—ã–µ –ø–æ–∫–∞ –ø—Ä–∏–º–µ—Ä–Ω—ã–µ)
                cursor.execute("""
                    INSERT INTO teachers (chat_id, surname, name, patronymic, is_verified)
                    VALUES (%s, %s, %s, %s, %s)
                """, (chat_id, "–§–∞–º–∏–ª–∏—è", "–ò–º—è", "–û—Ç—á–µ—Å—Ç–≤–æ", 0))
                conn.commit()
                bot.send_message(chat_id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å!")
        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {e}")
        finally:
            SqlConnection.close_connection(conn, cursor)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


@bot.callback_query_handler(func=lambda call: call.data == "student_button")
def handle_student(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°—Ç—É–¥–µ–Ω—Ç'."""
    chat_id = call.message.chat.id

    conn, cursor = SqlConnection.get_connection()
    if conn and cursor:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç
            cursor.execute("SELECT * FROM students WHERE chat_id = %s", (chat_id,))
            existing_student = cursor.fetchone()

            if existing_student:
                bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç! ‚úÖ\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é.")
            else:
                # –ï—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏
                msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏:")
                bot.register_next_step_handler(msg, request_student_number)
        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")
        finally:
            SqlConnection.close_connection(conn, cursor)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


def request_student_number(message):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î."""
    chat_id = message.chat.id
    student_number = message.text.strip()
    user_data[chat_id] = student_number

    conn, cursor = SqlConnection.get_connection()
    if conn and cursor:
        try:
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –§–ò–û, –≥—Ä—É–ø–ø—É –∏ —Ç.–¥.)
            cursor.execute("""
                INSERT INTO students (chat_id, student_number, surname, name, patronymic, `group`, is_headman)
                VALUES (%s, %s, %s, %s, %s, %s, %s)
            """, (chat_id, student_number, '–§–∞–º–∏–ª–∏—è', '–ò–º—è', '–û—Ç—á–µ—Å—Ç–≤–æ', '–ì—Ä—É–ø–ø–∞', 0))
            conn.commit()
            bot.send_message(chat_id, f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –í–∞—à –Ω–æ–º–µ—Ä –∑–∞—á—ë—Ç–∫–∏: {student_number}\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ–π /menu.")

        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")
        finally:
            SqlConnection.close_connection(conn, cursor)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


@bot.message_handler(commands=['menu'])
def open_menu(message):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ –¥–∞–Ω–Ω—ã–º –ë–î)."""
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –∏–∑ –ë–î
    conn, cursor = SqlConnection.get_connection()
    if conn and cursor:
        try:
            cursor.execute("""
                SELECT 'student' AS role FROM students WHERE chat_id = %s
                UNION
                SELECT 'teacher' AS role FROM teachers WHERE chat_id = %s
            """, (chat_id, chat_id))
            result = cursor.fetchone()

            if result:
                role = result[0]
                if role == "student":
                    bot_instance = TelegramBot(bot)
                    bot_instance.send_menu(chat_id)
                elif role == "teacher":
                    bot.send_message(chat_id, "–ú–µ–Ω—é –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
            else:
                bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–æ–π /start.")
        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏: {e}")
        finally:
            SqlConnection.close_connection(conn, cursor)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


@bot.message_handler(commands=['help'])
def send_help(message):
    """–ü—Ä–æ—Å—Ç–µ–π—à–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏."""
    bot.send_message(message.chat.id, "–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")


@bot.message_handler(commands=['meow'])
def send_meow(message):
    """–ü—Ä–∏–º–µ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã."""
    bot.send_message(message.chat.id, "meow")


@bot.message_handler(commands=['clear'])
def clear_chat(message):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ ~200 —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –±–æ—Ç–æ–º, –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å."""
    chat_id = message.chat.id
    message_id = message.message_id

    for i in range(200):
        try:
            bot.delete_message(chat_id, message_id - i)
        except telebot.apihelper.ApiException as e:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if "message to delete not found" in str(e):
                continue

    bot.send_message(chat_id, "–ß–∞—Ç –ø–æ—á–∏—â–µ–Ω!", disable_notification=True)


def delete_previous_message(chat_id, message_id):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –µ–≥–æ ID."""
    try:
        bot.delete_message(chat_id, message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
